#!/usr/bin/env node
import app from '../app';
import {
  PerformanceStorage,
  StockRoomsStorage,
} from '../src/server/storage';
import fs from 'fs';
import { port } from '../config';

const serverPort = process.env.PORT || port || 8080;
app.set('port', serverPort);

const server = app.listen(app.get('port'), () => {
  console.log(`Express server listening on port ${server.address().port}`);
});

import fetchDEV48Schedule from '../src/workers/scheduleInfoFetcher';
import roomInfoFetcher from '../src/workers/roomInfoFetcher';

const sleep = (timeout) => new Promise((resolve, reject) => {
  setTimeout(() => {
    resolve();
  }, timeout);
});

const getNextTimeout = () => {
  return 60 * 60 * 1000;
};

(async () => {
  while (true) {
    try {
      const result = await fetchDEV48Schedule();
      PerformanceStorage.setAll(result);
    }
    catch(e) {
      fs.appendFile('debug.txt', JSON.stringify(e, null, 2));
    }
    const timeout = getNextTimeout();
    await sleep(timeout);
  }
})();


(async () => {
  while (true) {
    try {
      const roomInfoes = await roomInfoFetcher();
      StockRoomsStorage.set(roomInfoes);
    }
    catch (e) {
      fs.appendFile('debug.txt', JSON.stringify(e, null, 2));
    }
    const timeout = getNextTimeout();
    await sleep(timeout);
  }
})();

